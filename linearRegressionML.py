import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import io
import base64
from sklearn.linear_model import LinearRegression
data = {
    "Edad": [96, 48, 40, 51, 10	,14	,86	,26	,48	,88	,37	,64	,85	,23	,93	,8	,53	,31	,33	,24	,66	,57	,78	,17	,22	,62	,93	,89	,38	,32	,52	,36	,26	,24	,85	,36	,20	,80	,16	,71	,71	,25	,77	,72	,60	,56	,15	,33	,51	,36	,97	,39	,21	,23	,32	,10	,24	,19	,92	,91	,22	,37	,96	,48	,81	,68	,56	,77	,35	,94	,13	,85	,26	,36	,14	,84	,55	,46	,77	,71	,46	,99	,31	,93	,81	,29	,16	,11	,42	,22	,58	,56	,38	,27	,62	,95	,90	,15	,85	,21	,68	,33	,24	,84	,24	,87	,89	,46	,17	,57	,67	,81	,54	,25	,54	,35	,88	,65	,18	,68	,77	,87	,59	,12	,70	,10	,75	,29	,44	,77	,50	,60	,76	,87	,44	,85	,72	,65	,73	,31	,29	,26	,96	,94	,32	,37	,56	,79	,19	,28	,82	,65	,99	,98	,30	,46	,50	,76	,88	,86	,54	,90	,41	,91	,87	,89	,17	,39	,27	,81	,92	,64	,96	,56	,44	,10	,42	,89	,81	,44	,99	,14	,64	,76	,15	,79	,64	,68	,13	,71	,16	,69	,16	,83	,36	,18	,72	,12	,10	,88	,71	,97	,14	,15	,66	,91	,25	,23	,24	,93	,78	,23	,47	,91	,67	,27	,86	,13	,91	,56	,50	,59	,26	,89	,50	,94	,65	,17	,88	,73	,17	,78	,13	,76	,62	,22	,36	,34	,74	,43	,10	,48	,26	,56	,88	,33	,40	,28	,99	,50	,74	,60	,88	,98	,36	,93	,49	,52	,45	,54	,76	,42	,13	,51	,62	,25	,37	,93	,70	,19	,18	,65	,29	,91	,95	,31	,81	,64	,99	,47	,62	,65	,63	,42	,40	,54	,66	,60	,65	,41	,81	,98	,83	,48	,45	,76	,39	,25	,27	,41	,52	,36	,83	,57	,79	,12	,35	,57	,93	,53	,43	,31	,72	,12	,57	,81	,30	,51	,89	,64	,31	,92	,10	,24	,35	,83	,48	,33	,13	,18	,53	,86	,15	,60	,86	,50	,62	,78	,66	,83	,83	,34	,18	,84	,46	,35	,91	,69	,54	,10	,14	,16	,72	,65	,80	,73	,64	,54	,83	,55	,66	,82	,37	,98	,48	,98	,94	,48	,75	,32	,11	,30	,18	,65	,69	,95	,11	,73	,55	,69	,52	,46	,59	,38	,62	,72	,42	,49	,94	,65	,68	,69	,20	,24	,40	,96	,56	,88	,58	,37	,95	,17	,68	,39	,14	,97	,96	,74	,42	,36	,87	,15	,23	,99	,60	,28	,61	,14	,46	,75	,58	,32	,39	,55	,66	,58	,42	,99	,50	,62	,57	,21	,37	,18	,36	,87	,80	,63	,67	,93	,42	,19	,99	,33	,88	,94	,18	,34	,15	,51	,70	,59	,29	,90	,15	,93	,86	,47	,30	,24	,96	,54	,52	,12	,65	,80	,63	,93	,34	,73	,78	,90	,62	,80	,46	,27	,84	,13	,12	,82	,93	,46	,78	,82	,72	,48	,29	,49	,44	,29	,72	,86	,43	,91	,98	,15	,19	,83	,10	,96],
    "Frecuencia Cardiaca": [165	,109	,104	,118	,61	,65	,161	,81	,112	,162	,92	,132	,162	,79	,174	,141	,122	,97	,90	,83	,129	,128	,160	,71	,67	,130	,174	,163	,100	,89	,120	,103	,83	,75	,154	,92	,70	,154	,62	,132	,145	,76	,142	,152	,126	,121	,77	,95	,119	,94	,171	,101	,66	,88	,86	,65	,82	,69	,158	,174	,80	,93	,159	,110	,158	,136	,127	,43	,92	,174	,61	,159	,88	,95	,62	,148	,116	,117	,158	,145	,107	,187	,82	,171	,154	,81	,68	,53	,93	,72	,123	,125	,96	,79	,137	,165	,163	,75	,161	,68	,141	,88	,72	,158	,83	,161	,162	,112	,69	,119	,137	,159	,120	,79	,118	,100	,160	,131	,69	,139	,151	,159	,125	,58	,139	,57	,156	,90	,99	,147	,108	,121	,150	,158	,108	,152	,138	,133	,141	,97	,88	,86	,177	,179	,88	,93	,116	,152	,75	,82	,159	,129	,182	,175	,86	,105	,116	,156	,172	,164	,117	,162	,110	,164	,156	,164	,72	,86	,84	,147	,174	,130	,174	,120	,103	,61	,100	,162	,144	,111	,180	,62	,136	,146	,67	,152	,129	,129	,63	,140	,61	,138	,81	,159	,95	,77	,138	,56	,67	,158	,147	,179	,60	,72	,126	,165	,84	,76	,79	,166	,147	,75	,105	,159	,131	,78	,151	,58	,172	,117	,108	,128	,84	,161	,112	,174	,132	,72	,161	,144	,71	,146	,62	,150	,127	,78	,93	,97	,150	,97	,70	,110	,84	,118	,160	,88	,90	,89	,176	,114	,144	,123	,171	,178	,99	,170	,108	,115	,107	,121	,151	,99	,58	,109	,132	,84	,87	,171	,139	,77	,74	,132	,84	,179	,175	,90	,151	,127	,170	,108	,126	,135	,135	,108	,101	,122	,133	,134	,133	,99	,146	,180	,162	,109	,113	,149	,100	,80	,86	,101	,123	,95	,157	,116	,152	,63	,92	,120	,165	,118	,95	,82	,135	,59	,118	,156	,92	,125	,161	,134	,98	,164	,61	,79	,89	,151	,105	,79	,52	,68	,112	,150	,64	,134	,155	,119	,132	,151	,137	,158	,151	,101	,70	,150	,107	,91	,166	,141	,108	,65	,70	,68	,142	,133	,158	,145	,128	,113	,144	,121	,135	,149	,105	,185	,112	,180	,173	,116	,153	,82	,57	,83	,65	,133	,146	,168	,64	,133	,124	,144	,117	,104	,125	,96	,123	,144	,108	,110	,176	,138	,126	,130	,77	,79	,99	,177	,124	,160	,130	,96	,178	,63	,137	,102	,59	,176	,183	,140	,99	,95	,166	,61	,68	,173	,133	,87	,129	,70	,109	,142	,124	,89	,91	,127	,128	,123	,107	,179	,110	,136	,120	,85	,93	,73	,99	,160	,147	,132	,135	,175	,92	,72	,183	,88	,155	,171	,75	,91	,75	,124	,145	,121	,88	,178	,64	,172	,157	,109	,88	,78	,176	,115	,115	,55	,140	,146	,125	,160	,93	,134	,154	,175	,125	,161	,98	,91	,153	,69	,62	,154	,176	,116	,151	,152	,148	,99	,87	,108	,108	,84	,140	,163	,104	,160	,165	,73	,79	,163	,65	,183
]
}

df = pd.DataFrame(data)
x= df[["Edad"]]
y = df[["Frecuencia Cardiaca"]]

model = LinearRegression()
model.fit(x,y)

#generar grafico con matplop e imagen 
def generate_plot(hours=None):
    fig, ax = plt.subplots()
    ax.scatter(df["Edad"], df["Frecuencia Cardiaca"], color="blue", label="Datos Reales")
    ax.plot(df["Edad"], model.predict(x), color="red", label="Línea de Regresión")

    if hours is not None:
        predicted_grade = calculateGrade(hours)
        ax.scatter(hours, predicted_grade, color="green", marker="o", s=100, label="Predicción Usuario")

    ax.set_xlabel("EDAD")
    ax.set_ylabel("Frecuencia Cardiaca promedio")
    ax.set_title("Regresión Lineal: EDAD vs Frecuencia Cardiaca")
    ax.legend()

    img = io.BytesIO()
    plt.savefig(img, format="png")
    img.seek(0)
    plt.close(fig)

    encoded_img = base64.b64encode(img.getvalue()).decode("utf-8")
    return encoded_img

def calculateGrade(hours):
    if hours > 100:
        hours = 98
    result = model.predict(np.array([[hours]]))[0][0]  
    return result

